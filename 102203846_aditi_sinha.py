# -*- coding: utf-8 -*-
"""102203846_Aditi Sinha.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tpniXVcu0GpqX62KlLsdXNBqPE2HgvD0
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.svm import SVC
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score


data_path = "/content/Creditcard_data.csv"
data = pd.read_csv(data_path)


fraud = data[data['Class'] == 1]
non_fraud = data[data['Class'] == 0].sample(len(fraud), random_state=42)
balanced_data = pd.concat([fraud, non_fraud])


samples = {
    "Simple Random Sampling": balanced_data.sample(frac=1, random_state=42),
    "Systematic Sampling": balanced_data.iloc[::2],
    "Stratified Sampling": balanced_data.groupby('Class', group_keys=False).apply(lambda x: x.sample(frac=0.8, random_state=42)),
    "Cluster Sampling": balanced_data[balanced_data['V1'] < 0],  # Example cluster
    "Bootstrap Sampling": balanced_data.sample(frac=1, replace=True, random_state=42)
}


models = {
    "Logistic Regression": LogisticRegression(max_iter=1000),
    "Decision Tree": DecisionTreeClassifier(),
    "Random Forest": RandomForestClassifier(),
    "SVM": SVC(),
    "KNN": KNeighborsClassifier()
}


results = {
    "Sampling Technique": [],
    "Model": [],
    "Accuracy": []
}


for sampling_name, sample in samples.items():
    for model_name, model in models.items():
        X_train, X_test, y_train, y_test = train_test_split(
            sample.drop("Class", axis=1), sample["Class"], test_size=0.2, random_state=42
        )
        model.fit(X_train, y_train)
        y_pred = model.predict(X_test)
        accuracy = accuracy_score(y_test, y_pred)

    
        results["Sampling Technique"].append(sampling_name)
        results["Model"].append(model_name)
        results["Accuracy"].append(accuracy)

    
        print(f"Sampling: {sampling_name}, Model: {model_name}, Accuracy: {accuracy:.2f}")


results_df = pd.DataFrame(results)


output_path = "C:\\Users\\adisi\\Downloads\\sampling_results.csv"
results_df.to_csv(output_path, index=False)

print(f"\nResults saved to {output_path}")